<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +APhB+CH8IABD/ggBB/8D/A//wAA///AA/8=
</value>
  </data>
</root>